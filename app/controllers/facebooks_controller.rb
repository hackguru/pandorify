require 'rack/oauth2'

class FacebooksController < ApplicationController
  include ApplicationHelper
  
  before_filter :require_authentication, :only => [:destroy, :friends]

  rescue_from Rack::OAuth2::Client::Error, :with => :oauth2_error

  # handle Facebook Auth Cookie generated by JavaScript SDK
  def show
    auth = Facebook.auth.from_cookie(cookies)
    authenticate Facebook.identify(auth.user)
    redirect_to dashboard_url
  end

  # handle Normal OAuth flow: start
  def new
    client = Facebook.auth(callback_facebook_url).client
    redirect_to client.authorization_uri(
      :scope => Facebook.config[:scope]
    )
  end

  # handle Normal OAuth flow: callback
  def create
    client = Facebook.auth(callback_facebook_url).client
    client.authorization_code = params[:code]
    access_token = client.access_token!
    user = FbGraph::User.me(access_token).fetch
    authenticate Facebook.identify(user)
#    redirect_to dashboard_url
    redirect_to root_url
  end

  def destroy
    unauthenticate
    redirect_to root_url
  end

  def friends
    @friends = Array.new
    current_user.friends.each do |friend| # .where("name like ?", "%#{params[:q]}%")
      @friends << {"id" => friend.id, "name" => friend.name}
  	end
  		
  	respond_to do |format|
       format.json { render :json => @friends.delete_if { |item| !item['name'].downcase.include? params[:q].downcase} }
    end
    
  end
  
  def all_users
    @users = Array.new
    puts "%"+params[:q]+"% ---- HEREEEEE"
    Facebook.find(:all, :conditions => ["name like ?", "'%"+params[:q]+"%'"]).each do |user| # .where("name like ?", "%#{params[:q]}%")
      @users << {"id" => user.id, "name" => user.name}
  	end
  		
  	respond_to do |format|
       format.json { render :json => @users }
    end    
  end
  
  def like_taste
    @page =  params[:page] || 1
    @user = current_user || Facebook.find_by_email(params[:user_email])
    @users = Facebook.users_with_common_song(@user).paginate(:page => @page )
  	respond_to do |format|
       format.json { render :json => @users }
    end    
  end
  

  def users_listen_to
    @users = Facebook.users_listen_to(Song.find(params[:song].to_i)).paginate(:page => @page )
  	respond_to do |format|
       format.json { render :json => @users }
    end
  end
  
  private

  def oauth2_error(e)
    flash[:error] = {
      :title => e.response[:error][:type],
      :message => e.response[:error][:message]
    }
    redirect_to root_url
  end
end
